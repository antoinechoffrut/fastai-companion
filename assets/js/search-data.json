{
  
    
        "post0": {
            "title": "Know your system",
            "content": ". This notebook shows how to find information about your system such as: . OS information | python version and install location | package and module versions and install locations | . My system (in a nutshell): . I work locally (mostly) on a mac; | I use pyenv as python version manager, and its plug-in pyenv-virtualenv as virtual environment manager. | . Some adjusments may be needed if you work on different platforms (especially Windows), or if you use other managers, such as conda. . . tags: system platform virtual environment management install python jupyter pytorch fastai workflow productivity . Tools and references . Python modules . sys | site | platform | . Utilities . pip: Python package management system | pyenv: Python version management system | pyenv-virtualenv: virtual environment management system | jupyter: interactive platform for scientific computing | . Helpful commands . Built-in magic commands (IPython documentation) | Python vs IPython (IPython documentation) | . Useful references . 3 ways to pip install a package - fastai2 use case by Farid Hussainia | How do I find the location of my python site packages directory? (stackoverflow) | . . Environment . System . I usually work locally on a MacBook Pro (2018). In particular I don&#39;t have a GPU (at least not a dedicated GPU). . # collapse-hide import platform print(f&quot;Platform: {platform.platform()} n&quot;) print(&quot;Details:&quot;) print(f&quot;Machine type: {platform.machine()}&quot;) print(f&quot;System: {platform.system()}&quot;) print(f&quot;Version: {platform.version()}&quot;) print(f&quot;Processor: {platform.processor()}&quot;) print(f&quot;Release: {platform.release()}&quot;) print(f&quot;Mac OS version: {platform.mac_ver()}&quot;) . . Platform: macOS-10.15.4-x86_64-i386-64bit Details: Machine type: x86_64 System: Darwin Version: Darwin Kernel Version 19.4.0: Wed Mar 4 22:28:40 PST 2020; root:xnu-6153.101.6~15/RELEASE_X86_64 Processor: i386 Release: 19.4.0 Mac OS version: (&#39;10.15.4&#39;, (&#39;&#39;, &#39;&#39;, &#39;&#39;), &#39;x86_64&#39;) . Virtual environments (with pyenv) . I use pyenv to manage Python versions, and the extension pyenv-virtualenv to manage virtual environments. . To check which virtual environment is activated (with pyenv): . !pyenv version . Python version . Using the sys module . # collapse-show import sys print(sys.version) # print(sys.version_info) . . 3.8.1 (default, Mar 30 2020, 15:12:05) [Clang 11.0.3 (clang-1103.0.32.29)] . Using the platform module . # collapse-show import platform print(f&quot;Python: version {platform.python_version()}&quot;) print(f&quot;Python build: {platform.python_build()}&quot;) . . Python: version 3.8.1 Python build: (&#39;default&#39;, &#39;Mar 30 2020 15:12:05&#39;) . A convoluted alternative . !python --version . Installed packages . List of all packlages with pip . !pip freeze . Note that those lines beginning with -e correspond to packages installed in editable mode. For example, following Farid Hassainia&#39;s post, I have an editable install of fastai2: . Check specific packages . Check that fastai2 is installed . !pip freeze | grep fastai2 . -e git+https://github.com/fastai/fastai2@8d229f2a01ac8f0a02ad86db954f7e3e48928bd9#egg=fastai2 . Otherwise, packages installed via pip are listed as usual. Check that (e.g.). numpy is installed: . !pip freeze | grep numpy . numpy==1.18.2 . Package versions . Using the __version__ attribute . # collapse-show import torch print(f&quot;{torch.__name__:&lt;12}: version {torch.__version__}&quot;) import fastai2 print(f&quot;{fastai2.__name__:&lt;12}: version {fastai2.__version__}&quot;) . . torch : version 1.4.0 fastai2 : version 0.0.16 . Locating the Python install . Using sys . Returns absolute path to python executable . # collapse-show import sys sys.executable . . Using !which (Unix-like systems) . Remark: pyenv uses shims, so instead, run pyenv which python (see next cell): . !which python . Using !pyenv which . !pyenv which python . Locating packages . Read the __path__ attribute . import numpy numpy.__path__ . For an editable install, from a local copy of the repository: . import fastai2 fastai2.__path__ . Using !pip show . !pip show numpy | grep Location # !pip show numpy # uncomment to see more info on package . For an editable install: . !pip show fastai2 | grep Location #!pip show fastai2 # uncomment to see more info on package . Search path for modules: sys.path . Python looks for paths to modules by looking into a list of directories in sys.path: . import sys sys.path . List of all global site-packages directories . Packages are normally installed in the site-packages folder of the Python installation. This directory can be found using the site module: . import site site.getsitepackages() .",
            "url": "https://antoinechoffrut.github.io/fastai-companion/workflow/2020/03/31/know-your-system.html",
            "relUrl": "/workflow/2020/03/31/know-your-system.html",
            "date": " • Mar 31, 2020"
        }
        
    
  
    
        ,"post1": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://antoinechoffrut.github.io/fastai-companion/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About",
          "content": "I am a mathematician by training, with about a decade of research experience in academia, where I specialized in the analysis of partial differential equations. . Recently my interests turned to data science, particularly neural networks. .",
          "url": "https://antoinechoffrut.github.io/fastai-companion/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

}